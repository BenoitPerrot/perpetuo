<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
  http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.criteo.pom</groupId>
    <artifactId>java-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../../parent-poms/parent-poms/java-parent/pom.xml</relativePath>
  </parent>

  <groupId>com.criteo.perpetuo</groupId>
  <artifactId>perpetuo-app</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Perpetuo</name>

  <properties>
    <build-aux.directory>build-aux</build-aux.directory>
    <webapp.directory>src/main/webapp</webapp.directory>
    <webapp.build.directory>${webapp.directory}/build/default</webapp.build.directory>

    <minimizeJar>false</minimizeJar>
    <main.class>com.criteo.perpetuo.app.main</main.class>

    <slick.version>3.1.1</slick.version>
    <freeslick.version>3.1.1.1</freeslick.version>
    <h2db.version>1.4.191</h2db.version>
    <hikari.version>2.4.5</hikari.version>

    <twitter.server.version>1.20.0</twitter.server.version>
    <twitter.util.version>6.34.0</twitter.util.version>
    <finatra.version>2.1.6</finatra.version>
    <finagle.version>6.35.0</finagle.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>com.criteo.sdk</groupId>
      <artifactId>sdk-discovery</artifactId>
    </dependency>

    <dependency>
      <groupId>com.criteo.sdk</groupId>
      <artifactId>datasource-prm-java</artifactId>
    </dependency>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>

    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
    </dependency>

    <dependency>
      <groupId>com.typesafe.slick</groupId>
      <artifactId>slick_${scala.version.short}</artifactId>
      <version>${slick.version}</version>
    </dependency>

    <dependency>
      <groupId>org.suecarter</groupId>
      <artifactId>freeslick_${scala.version.short}</artifactId>
      <version>${freeslick.version}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2db.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikari.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>util-app_${scala.version.short}</artifactId>
      <version>${twitter.util.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>util-stats_${scala.version.short}</artifactId>
      <version>${twitter.util.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>util-core_${scala.version.short}</artifactId>
      <version>${twitter.util.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>util-logging_${scala.version.short}</artifactId>
      <version>${twitter.util.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>finagle-http_${scala.version.short}</artifactId>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>finagle-core_${scala.version.short}</artifactId>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>twitter-server_${scala.version.short}</artifactId>
      <version>1.20.0</version>
    </dependency>

    <dependency>
      <groupId>com.twitter.finatra</groupId>
      <artifactId>finatra-http_${scala.version.short}</artifactId>
    </dependency>

    <dependency>
      <groupId>com.twitter.finatra</groupId>
      <artifactId>finatra-slf4j_${scala.version.short}</artifactId>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-utils_${scala.version.short}</artifactId>
      <version>${finatra.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-app_${scala.version.short}</artifactId>
      <version>${finatra.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-server_${scala.version.short}</artifactId>
      <version>${finatra.version}</version>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-core_${scala.version.short}</artifactId>
      <version>${finatra.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.8</version>
    </dependency>

    <dependency>
      <groupId>org.clapper</groupId>
      <artifactId>grizzled-slf4j_${scala.version.short}</artifactId>
      <version>1.0.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>4.0</version>
    </dependency>

    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-json_${scala.version.short}</artifactId>
      <version>1.3.0</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>2.4.10</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-jsr223</artifactId>
      <version>2.4.6</version>
    </dependency>

    <!-- Test -->

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version.short}</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.twitter.finatra</groupId>
      <artifactId>finatra-http_${scala.version.short}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-app_${scala.version.short}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-core_${scala.version.short}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-modules_${scala.version.short}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.twitter.inject</groupId>
      <artifactId>inject-server_${scala.version.short}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <!-- FeatureTest dependency Fix https://github.com/twitter/finatra/issues/272 -->
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-testlib</artifactId>
      <version>4.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <resources>
      <resource>
        <directory>${webapp.build.directory}</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.4.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <!-- Ask NPM to install required tools -->
          <execution>
            <id>npm install</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>install</argument>
              </arguments>
              <workingDirectory>${build-aux.directory}</workingDirectory>
            </configuration>
          </execution>
          <!-- Ask Bower to install required front-end packages -->
          <execution>
            <id>bower install</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <executable>bower</executable>
              <arguments>
                <argument>install</argument>
              </arguments>
              <workingDirectory>${webapp.directory}</workingDirectory>
            </configuration>
          </execution>
          <!-- Have polymer-cli build the app -->
          <execution>
            <id>polymer build</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <executable>node</executable>
              <arguments>
                <argument>${project.basedir}/${build-aux.directory}/node_modules/polymer-cli/bin/polymer.js</argument>
                <argument>build</argument>
              </arguments>
              <workingDirectory>${webapp.directory}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Be sure to package just-processed web resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Surefire is disabled in order to use scalatest instead -->
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>packaging</id>
      <activation>
        <property>
          <name>packageForDeploy</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <minimizeJar>${minimizeJar}</minimizeJar>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <manifestEntries>
                        <Main-Class>${main.class}</Main-Class>
                      </manifestEntries>
                    </transformer>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                      <resource>reference.conf</resource>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
